/*
	Name: Remove Duplicates from Sorted Array Ⅱ
	Copyright: WsiekrsYdh
	Author: WsiekrsYdh
	Date: 06/02/19 11:40
	Description: Follow up for "Remove Duplicates": What if duplicates are allowed at most twice?
	             For example, Given sorted array A = [1,1,1,2,2,3],
	             Your function should return length = 5,and Ais now [1,1,2,2,3].
*/

#include <iostream>
#include <vector>
using namespace std;

/*时间复杂度O(n),空间复杂度O（1）*/
int removeDuplicates01(vector<int>& nums) {
	if(nums.size()<=2) {
		return nums.size();
	}
	int index=2;
	for(int i=2; i<nums.size(); i++) {
		if(nums[i]!=nums[index-2]) {
			nums[index++]=nums[i];
		}
	}
	return index;
}

/*时间复杂度O(n), 空间复杂度O(1)*/
int removeDuplicates02(vector<int>& nums) {
	const int m=nums.size();
	int index=0;
	for(int i=0; i<m; ++i) {
		if(i>0&&i<m-1&&nums[i]==nums[i-1]&&nums[i]==nums[i+1]) {
			continue;
		}
		nums[index++]=nums[i];
	}
	return index;
}

int main(int argc, char** argv) {
	cout<<"Give the length of array."<<endl;
	int n;
	cin>>n;
	vector<int> A(n);
	int a,LengthOfArray;
	cout<<"Give a sorted array."<<endl;
	for(int i=0; i<n; i++) {
		cin>>a;
		A.push_back(a);
	}
	LengthOfArray=removeDuplicates01(A);
	cout<<"The length of array is "<<LengthOfArray<<endl;
	return 0;
}
